name: Run Tests and Email Results

on:
  push:
    branches: [ develop, main ]
  pull_request:
    branches: [ develop, main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        # Install optional dependencies for tests
        pip install dowhy lingam statsmodels || true
    
    - name: Set up Python path for imports
      run: |
        echo "PYTHONPATH=${{ github.workspace }}" >> $GITHUB_ENV
    
    - name: Run all tests (tests/ folder + root-level)
      id: pytest
      run: |
        pytest tests/ test_interactive_features.py test_end_to_end.py --tb=short --cov=. --cov-report=term-missing > test_results.txt 2>&1
        echo "exit_code=$?" >> $GITHUB_OUTPUT
        cat test_results.txt
      continue-on-error: true
    
    # Temporarily disabled email notifications
    # - name: Validate email secrets
    #   run: |
    #     if [ -z "${{ secrets.EMAIL_USERNAME }}" ]; then
    #       echo "Error: EMAIL_USERNAME secret is not set"
    #       exit 1
    #     fi
    #     if [ -z "${{ secrets.EMAIL_APP_PASSWORD }}" ]; then
    #       echo "Error: EMAIL_APP_PASSWORD secret is not set"
    #       exit 1
    #     fi
    #     echo "Email secrets validation passed"
    
    # - name: Send email notification
    #   uses: dawidd6/action-send-mail@v3
    #   with:
    #     server_address: smtp.mail.yahoo.com
    #     server_port: 587
    #     username: ${{ secrets.EMAIL_USERNAME }}
    #     password: ${{ secrets.EMAIL_APP_PASSWORD }}
    #     subject: "${{ github.ref_name == 'main' && '[MAIN BRANCH]' || '[DEVELOP BRANCH]' }} Test Results for ${{ github.repository }} - Commit ${{ github.sha }}"
    #     to: tfekete@prysm.solutions
    #     from: ${{ secrets.EMAIL_USERNAME }}
    #     body: |
    #       Test results for repository: ${{ github.repository }}
    #       Branch: ${{ github.ref_name }} ${{ github.ref_name == 'main' && '(PRODUCTION BRANCH üöÄ)' || '(DEVELOPMENT BRANCH üîß)' }}
    #       Commit: ${{ github.sha }}
    #       Commit message: ${{ github.event.head_commit.message }}
    #       
    #       Test Status: ${{ steps.pytest.outputs.exit_code == '0' && 'PASSED ‚úÖ' || 'FAILED ‚ùå' }}
    #       
    #       Test Coverage: All files in tests/ folder + root-level test_*.py files
    #       
    #       ${{ github.ref_name == 'main' && 'IMPORTANT: This is a main branch build. Please review any failures immediately.' || 'This is a development build. Review as needed.' }}
    #         Full test output:
    #       
    #     attachments: test_results.txt
